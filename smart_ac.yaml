blueprint:
  name: Smart AC Control with Humidity Logic (v6.9 - Fourth Floor Dry)
  description: Automatically adjusts AC based on comfort temperature, house temperature, and humidity, with persistent drying mode.
  domain: automation
  source_url: https://github.com/danielcherubini/Home_Assistant_Blueprints/blob/main/smart_ac.yaml
  input:
    heating_hysteresis:
      name: Heating Hysteresis (°C)
      description: Temperature difference before heating is activated.
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          mode: box
      default: 0.8
    cooling_hysteresis:
      name: Cooling Hysteresis (°C)
      description: Temperature difference before cooling is activated.
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          mode: box
      default: 1.0
    comfort_hysteresis:
      name: Comfort Hysteresis (°C)
      description: Temperature difference for "comfort" mode.
      selector:
        number:
          min: 0.1
          max: 5.0
          step: 0.1
          mode: box
      default: 0.2
    dry_mode_temperature_difference_2nd_floor:
      name: Dry Difference 2nd Floor (°C)
      description: Temperature difference for "dry" mode.
      selector:
        number:
          min: -6.0
          max: 6.0
          step: 0.1
          mode: box
      default: 1.0
    dry_mode_temperature_difference_4th_floor:
      name: Dry Difference 4th Floor (°C)
      description: Temperature difference for "dry" mode.
      selector:
        number:
          min: -6.0
          max: 6.0
          step: 0.1
          mode: box
      default: 1.0
    fourth_floor_temperature_difference:
      name: 4th Floor Temperature Difference (°C)
      description: Temperature difference for the 4th floor target relative to comfort temp.
      selector:
        number:
          min: -5.0
          max: 5.0
          step: 0.1
          mode: box
      default: 1.5
    max_humidity:
      name: Maximum Humidity (%)
      description: Maximum humidity before dry is active.
      selector:
        number:
          min: 30
          max: 70
          step: 1
          mode: box
      default: 60
    min_humidity:
      name: Minimum Humidity (%)
      description: Min humidity before dry is inactive.
      selector:
        number:
          min: 30
          max: 70
          step: 1
          mode: box
      default: 50
    second_floor_ac:
      name: 2nd Floor AC Entity
      description: The climate entity for the 2nd floor.
      selector:
        entity:
          domain: climate
    second_floor_temp_sensor:
      name: 2nd Floor Temperature Sensor
      description: The temperature sensor for the 2nd floor.
      selector:
        entity:
          domain: sensor
    fourth_floor_ac:
      name: 4th Floor AC Entity
      description: The climate entity for the 4th floor.
      selector:
        entity:
          domain: climate
    fourth_floor_temp_sensor:
      name: 4th Floor Temperature Sensor
      description: The temperature sensor for the 4th floor.
      selector:
        entity:
          domain: sensor
    house_temperature_sensor:
      name: House Mean Temperature Sensor
      description: The sensor providing the average house temperature.
      selector:
        entity:
          domain: sensor
    fourth_floor_humidity_sensor:
      name: 4th Floor Humidity Sensor
      description: The humidity sensor for the 4th floor.
      selector:
        entity:
          domain: sensor
    house_humidity_sensor:
      name: House Mean Humidity Sensor
      description: The sensor providing the average house humidity.
      selector:
        entity:
          domain: sensor
    drying_active_helper:
      name: Drying Active Helper
      description: Input boolean helper to track if drying mode is active (e.g., input_boolean.drying_mode_active). Create this helper in HA.
      selector:
        entity:
          domain: input_boolean
    comfort_preset:
      name: Comfort Preset
      description: The preset to use when in the comfort zone (and not drying).
      selector:
        select:
          options: ["Normal", "Powerful", "Quiet", "off"]
      default: "Normal"
    heat_preset:
      name: Heat Preset
      description: The preset to use when in the heating zone.
      selector:
        select:
          options: ["Normal", "Powerful", "Quiet", "off"]
      default: "Powerful"
    cool_preset:
      name: Cool Preset
      description: The preset to use when in the cooling zone.
      selector:
        select:
          options: ["Normal", "Powerful", "Quiet", "off"]
      default: "Powerful"
    dry_preset:
      name: Dry Preset
      description: The preset to use when drying mode is active.
      selector:
        select:
          options: ["Normal", "Powerful", "Quiet", "off"]
      default: "Normal"
    comfort_mode:
      name: Comfort Mode (HVAC)
      description: The HVAC mode to use when in the comfort zone (and not drying).
      selector:
        select:
          options: ["auto", "heat_cool", "cool", "heat", "dry", "fan_only", "off"]
      default: "fan_only"
    heat_mode:
      name: Heat Mode (HVAC)
      description: The HVAC mode to use when in the heating zone.
      selector:
        select:
          options: ["auto", "heat_cool", "cool", "heat", "dry", "fan_only", "off"]
      default: "heat"
    cool_mode:
      name: Cool Mode (HVAC)
      description: The HVAC mode to use when in the cooling zone.
      selector:
        select:
          options: ["auto", "heat_cool", "cool", "heat", "dry", "fan_only", "off"]
      default: "cool"
    dry_mode: 
      name: Dry Mode (HVAC)
      description: The HVAC mode to use when drying mode is active.
      selector:
        select:
          options: ["auto", "heat_cool", "cool", "heat", "dry", "fan_only", "off"]
      default: "dry"
    second_floor_current_hvac_mode_helper:
      name: 2nd Floor AC Current HVAC Mode Helper
      description: Helper entity (input_text) to store the current HVAC mode of the 2nd floor AC unit.
      selector:
        entity:
          domain: input_text
      default: input_text.second_floor_ac_hvac_mode
    fourth_floor_current_hvac_mode_helper:
      name: 4th Floor AC Current HVAC Mode Helper
      description: Helper entity (input_text) to store the current HVAC mode of the 4th floor AC unit.
      selector:
        entity:
          domain: input_text
      default: input_text.fourth_floor_ac_hvac_mode

trigger:
  - platform: state
    entity_id:
      - input_number.comfort_temp 
      - !input house_temperature_sensor
      - !input house_humidity_sensor
      - !input drying_active_helper

condition: []

action:
  - variables:
      # --- Aliases for !input values ---
      var_comfort_mode: !input comfort_mode
      var_heat_mode: !input heat_mode
      var_cool_mode: !input cool_mode
      var_dry_hvac_mode: !input dry_mode
      var_comfort_preset: !input comfort_preset
      var_heat_preset: !input heat_preset
      var_cool_preset: !input cool_preset
      var_dry_preset: !input dry_preset
      var_heating_hysteresis: !input heating_hysteresis
      var_cooling_hysteresis: !input cooling_hysteresis
      var_comfort_hysteresis: !input comfort_hysteresis
      var_dry_mode_temp_diff_2nd_floor: !input dry_mode_temperature_difference_2nd_floor
      var_dry_mode_temp_diff_4th_floor: !input dry_mode_temperature_difference_4th_floor
      var_fourth_floor_temp_diff: !input fourth_floor_temperature_difference

      # Entity ID inputs from blueprint - aliased for reliable use in templates
      var_house_temp_sensor_id: !input house_temperature_sensor
      var_second_floor_temp_sensor_id: !input second_floor_temp_sensor
      var_fourth_floor_temp_sensor_id: !input fourth_floor_temp_sensor
      var_fourth_floor_humidity_sensor_id: !input fourth_floor_humidity_sensor
      var_house_humidity_sensor_id: !input house_humidity_sensor
      var_drying_active_helper_id: !input drying_active_helper
      var_sf_hvac_mode_helper_id: !input second_floor_current_hvac_mode_helper
      var_ff_hvac_mode_helper_id: !input fourth_floor_current_hvac_mode_helper
      var_max_humidity: !input max_humidity
      var_min_humidity: !input min_humidity
      
      # --- Calculated variables using the aliases above ---
      temp_diff: >
        {% set house_temp_str = states(var_house_temp_sensor_id) %}
        {% set comfort_temp_str = states('input_number.comfort_temp') %}
        {% if house_temp_str not in ['unknown', 'unavailable'] and comfort_temp_str not in ['unknown', 'unavailable'] %}
          {{ (house_temp_str|float(0) - comfort_temp_str|float(0))|round(1) }}
        {% else %}
          none
        {% endif %}
      heating_temp_trigger: >
        {% set comfort_temp_str = states('input_number.comfort_temp') %}
        {% if comfort_temp_str not in ['unknown', 'unavailable'] %}
          {{ (comfort_temp_str|float(0) - var_heating_hysteresis|float(0))|round(1) }}
        {% else %}
          none
        {% endif %}
      cooling_temp_trigger: >
        {% set comfort_temp_str = states('input_number.comfort_temp') %}
        {% if comfort_temp_str not in ['unknown', 'unavailable'] %}
          {{ (comfort_temp_str|float(0) + var_cooling_hysteresis|float(0))|round(1) }}
        {% else %}
          none
        {% endif %}
      fourth_floor_needs_dry: >
        {% set ff_humidity_str = states(var_fourth_floor_humidity_sensor_id) %}
        {% if ff_humidity_str not in ['unknown', 'unavailable'] %}
          {{ ff_humidity_str|float(0)|round(1) >= var_max_humidity|float(0)|round(1) }}
        {% else %}
          false
        {% endif %}
      fourth_floor_needs_heat: >
        {% set ff_temp_str = states(var_fourth_floor_temp_sensor_id) %}
        {% set comfort_temp_str = states('input_number.comfort_temp') %}
        {% if ff_temp_str not in ['unknown', 'unavailable'] and comfort_temp_str not in ['unknown', 'unavailable'] %}
          {{ ff_temp_str|float(0)|round(1) < ((comfort_temp_str|float(0) + var_fourth_floor_temp_diff|float(0)) - var_heating_hysteresis|float(0))|round(1) }}
        {% else %}
          false
        {% endif %}
      second_floor_needs_cool: >
        {% set sf_temp_str = states(var_second_floor_temp_sensor_id) %}
        {% set comfort_temp_str = states('input_number.comfort_temp') %}
        {% if sf_temp_str not in ['unknown', 'unavailable'] and comfort_temp_str not in ['unknown', 'unavailable'] %}
          {{ sf_temp_str|float(0)|round(1) > ((comfort_temp_str|float(0) - var_fourth_floor_temp_diff|float(0)) + var_cooling_hysteresis|float(0))|round(1) }}
        {% else %}
          false
        {% endif %}
      current_humidity: >
        {% set humid_str = states(var_house_humidity_sensor_id) %}
        {% if humid_str not in ['unknown', 'unavailable'] %}
          {{ humid_str|float(0) }}
        {% else %}
          -1
        {% endif %}

  - choose: # Manage drying_active_helper state
      - conditions:
          - condition: template
            value_template: "{{ not is_state(var_drying_active_helper_id, 'on') }}"
          - condition: template
            value_template: "{{ current_humidity != -1 and current_humidity >= var_max_humidity }}"
        sequence:
          - service: input_boolean.turn_on
            target:
              entity_id: !input drying_active_helper # Target still uses !input for YAML substitution
        alias: "Activate Drying Helper"
      - conditions:
          - condition: template
            value_template: "{{ is_state(var_drying_active_helper_id, 'on') }}"
          - condition: template
            value_template: "{{ current_humidity != -1 and current_humidity < var_min_humidity }}"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: !input drying_active_helper # Target still uses !input for YAML substitution
        alias: "Deactivate Drying Helper"
    default: []

  - choose: # Determine HVAC modes for input_text helpers
      - conditions:
          - condition: template
            value_template: "{{ temp_diff is not none and temp_diff >= (0 - var_comfort_hysteresis|float(0)) and temp_diff <= var_comfort_hysteresis|float(0) }}"
        sequence:
          - service: input_text.set_value
            target: { entity_id: !input second_floor_current_hvac_mode_helper }
            data:
              value: "{{ var_comfort_mode }}"
          - service: input_text.set_value
            target: { entity_id: !input fourth_floor_current_hvac_mode_helper }
            data:
              value: "{{ var_comfort_mode }}"
        alias: "Set Comfort/Dry HVAC Mode"
      - conditions:
          - condition: template
            value_template: "{{ heating_temp_trigger is not none and states(var_house_temp_sensor_id)|float(0)|round(1) < heating_temp_trigger }}"
        sequence:
          - service: input_text.set_value
            target: { entity_id: !input second_floor_current_hvac_mode_helper }
            data: { value: "{{ var_heat_mode }}" }
          - service: input_text.set_value
            target: { entity_id: !input fourth_floor_current_hvac_mode_helper }
            data:
              value: >
                {% if fourth_floor_needs_heat %}
                  {{ var_heat_mode }}
                {% else %}
                  {{ var_comfort_mode }}
                {% endif %}
        alias: "Set Heat HVAC Mode"
      - conditions:
          - condition: template
            value_template: "{{ cooling_temp_trigger is not none and states(var_house_temp_sensor_id)|float(0)|round(1) > cooling_temp_trigger }}"
        sequence:
          - service: input_text.set_value
            target: { entity_id: !input fourth_floor_current_hvac_mode_helper }
            # data: { value: "{{ var_dry_hvac_mode if is_state(var_drying_active_helper_id, 'on') else var_cool_mode }}" }
            data:
              value: >
                {% if fourth_floor_needs_dry %}
                  {{ var_dry_hvac_mode }}
                {% else %}
                  {{ var_dry_hvac_mode if is_state(var_drying_active_helper_id, 'on') else var_cool_mode }}
                {% endif %}
          - service: input_text.set_value
            target: { entity_id: !input second_floor_current_hvac_mode_helper }
            data:
              value: >
                {% if second_floor_needs_cool %}
                  {{ var_dry_hvac_mode if is_state(var_drying_active_helper_id, 'on') else var_cool_mode }}
                {% else %}
                  {{ var_dry_hvac_mode if is_state(var_drying_active_helper_id, 'on') else var_comfort_mode }}
                {% endif %}
        alias: "Set Cool HVAC Mode"
    default: []


  # 2nd Floor
  - variables:
      sf_target_hvac_mode: "{{ states(var_sf_hvac_mode_helper_id) }}"
      sf_target_preset: >
        {% if sf_target_hvac_mode == var_heat_mode %} {{ var_heat_preset }}
        {% elif sf_target_hvac_mode == var_cool_mode %} {{ var_cool_preset }}
        {% elif sf_target_hvac_mode == var_dry_hvac_mode %} {{ var_dry_preset }}
        {% else %} {{ var_comfort_preset }}
        {% endif %}
      sf_target_temp: >
        {% if sf_target_hvac_mode == var_dry_hvac_mode %} {{ (states('input_number.comfort_temp')|float(0) + var_dry_mode_temp_diff_2nd_floor) }}
        {% else %} {{ states('input_number.comfort_temp')|float(0) }}
        {% endif %}
  - service: climate.set_preset_mode
    target:
      entity_id: !input second_floor_ac
    data:
      preset_mode: "{{ sf_target_preset }}"
  - service: climate.set_temperature
    target:
      entity_id: !input second_floor_ac
    data:
      temperature: "{{ sf_target_temp }}"
      hvac_mode: "{{ sf_target_hvac_mode }}"
      
  # 4th Floor
  - variables:
      ff_target_hvac_mode: "{{ states(var_ff_hvac_mode_helper_id) }}"
      ff_target_preset: >
        {% if ff_target_hvac_mode == var_heat_mode %} {{ var_heat_preset }}
        {% elif ff_target_hvac_mode == var_cool_mode %} {{ var_cool_preset }}
        {% elif ff_target_hvac_mode == var_dry_hvac_mode %} {{ var_dry_preset }}
        {% else %} {{ var_comfort_preset }}
        {% endif %}
      ff_target_temp: >
        {% if ff_target_hvac_mode == var_dry_hvac_mode %} {{ (states('input_number.comfort_temp')|float(0) + (var_dry_mode_temp_diff_4th_floor + var_fourth_floor_temp_diff)) }}
        {% else %} {{ (states('input_number.comfort_temp')|float(0) + var_fourth_floor_temp_diff) }}
        {% endif %}
  - service: climate.set_preset_mode
    target:
      entity_id: !input fourth_floor_ac
    data:
      preset_mode: "{{ ff_target_preset }}"
  - service: climate.set_temperature
    target:
      entity_id: !input fourth_floor_ac
    data:
      temperature: "{{ ff_target_temp }}" 
      hvac_mode: "{{ ff_target_hvac_mode }}"
